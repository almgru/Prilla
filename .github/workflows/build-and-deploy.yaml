name: 'Build and deploy'
on:
  push:
    branches:
    - main

  pull_request:

  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: 'Select the environment'

jobs:
  changes:
    name: 'Determine jobs to run'
    runs-on: 'ubuntu-latest'
    outputs:
      web: ${{ steps.changes.outputs.web_any_modified }}
      android: ${{ steps.changes.outputs.android_any_modified }}
      github_actions: ${{ steps.changes.outputs.github_actions_any_modified }}
    steps:
    - uses: 'actions/checkout@v3'
      with:
        fetch-depth: 0

    - uses: 'tj-actions/changed-files@v37'
      id: changes
      with:
        files_yaml: |
          github_actions:
            - '.github/**/*'
          web:
            - 'server/**/*'
            - 'client/web/**/*'
          android:
            - 'client/android/**/*'

  build_web:
    name: 'Build and publish'
    runs-on: 'ubuntu-latest'
    needs: 'changes'
    if: |
      github.event_name == 'workflow_dispatch' || github.event_name == 'push' ||
      needs.changes.outputs.web == 'true' || needs.changes.outputs.github_actions == 'true'
    outputs:
      docker_tag: ${{ steps.build_and_publish.outputs.docker_tag }}
    steps:
    - uses: 'actions/checkout@v3'

    - uses: './.github/actions/build-and-publish-docker-image'
      name: 'Build and publish docker image'
      id: build_and_publish
      with:
        docker_repository: '${{ secrets.DOCKER_HUB_USERNAME }}/prilla'
        registry_username: ${{ secrets.DOCKER_HUB_USERNAME }}
        registry_token: ${{ secrets.DOCKER_HUB_TOKEN }}
        platforms: 'linux/amd64,linux/arm64'

  build_android:
    name: 'Build Android APK'
    runs-on: 'ubuntu-latest'
    needs: 'changes'
    if: |
      github.event_name == 'workflow_dispatch' || github.event_name == 'push' ||
      needs.changes.outputs.android == 'true' || needs.changes.outputs.github_actions == 'true'
    environment:
      name: >-
        ${{
          github.event_name == 'workflow_dispatch' && github.event.inputs.environment ||
          (github.event_name == 'push' && 'production') ||
          'staging'
        }}
    steps:
    - uses: 'actions/checkout@v3'

    - name: 'Build, sign and upload APK artifact'
      uses: './.github/actions/build-and-publish-apk'
      with:
        build_type: ${{ vars.ENV_NAME == 'production' && 'release' || 'debug' }}
        signing_key: ${{ secrets.APK_SIGNING_KEYSTORE }}
        signing_key_password: ${{ secrets.APK_SIGNING_KEY_PASSWORD }}
        signing_key_alias: ${{ vars.APK_SIGNING_KEY_ALIAS }}

  deploy:
    name: 'Deploy to runner'
    runs-on: 'self-hosted'
    needs: 'build_web'
    environment:
      name: >-
        ${{
          github.event_name == 'workflow_dispatch' && github.event.inputs.environment ||
          (github.event_name == 'push' && 'production') ||
          'staging'
        }}
    steps:
    - uses: 'actions/checkout@v3'

    - uses: './.github/actions/deploy-docker-image-to-runner'
      with:
        environment: ${{ vars.ENV_NAME }}
        docker_tag: ${{ needs.build_web.outputs.docker_tag }}
        db_username: ${{ vars.DB_USERNAME }}
        db_password: ${{ secrets.DB_PASSWORD }}
        web_username: ${{ vars.WEB_USERNAME }}
        web_password: ${{ secrets.WEB_PASSWORD }}
